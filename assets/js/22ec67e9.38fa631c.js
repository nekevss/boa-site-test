"use strict";(self.webpackChunkboajs_dev=self.webpackChunkboajs_dev||[]).push([[989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),g=a,h=d["".concat(l,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4},o="VM Execution Flowgraph",p={unversionedId:"debugging/debug_flowgraph",id:"debugging/debug_flowgraph",title:"VM Execution Flowgraph",description:"We can also get the VM instructions flowgraph, which is a visual representation of the instruction flow.",source:"@site/docs/debugging/debug_flowgraph.md",sourceDirName:"debugging",slug:"/debugging/debug_flowgraph",permalink:"/boa-site-test/docs/debugging/debug_flowgraph",draft:!1,editUrl:"https://github.com/boa-dev/boa-dev.github.io/tree/main/docs/docs/debugging/debug_flowgraph.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"infoSidebar",previous:{title:"Tracing Boa's Virtual Machine",permalink:"/boa-site-test/docs/debugging/debug_trace"},next:{title:"Boa Debug Object",permalink:"/boa-site-test/docs/category/boa-debug-object"}},l={},s=[],c={toc:s},d="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(d,(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vm-execution-flowgraph"},"VM Execution Flowgraph"),(0,a.kt)("p",null,"We can also get the VM instructions flowgraph, which is a visual representation of the instruction flow."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Start")," (in green) and ",(0,a.kt)("inlineCode",{parentName:"p"},"End")," (in red) node in the graph represents the start and end point of execution.\nThey are not instructions, just markers."),(0,a.kt)("p",null,"The conditional instructions are diamond shaped, with the ",(0,a.kt)("inlineCode",{parentName:"p"},'"YES"')," branch in green and the ",(0,a.kt)("inlineCode",{parentName:"p"},'"NO"')," branch in red.\nThe push and pop evironment pairs match colors and are connected by a dotted line."),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"--flowgraph")," (or ",(0,a.kt)("inlineCode",{parentName:"p"},"--flowgraph=mermaid")," for ",(0,a.kt)("a",{parentName:"p",href:"https://mermaid-js.github.io/"},"mermaid")," format) flag which outputs\n",(0,a.kt)("a",{parentName:"p",href:"https://graphviz.org/"},"graphviz")," format by default, and pipe it to ",(0,a.kt)("inlineCode",{parentName:"p"},"dot")," (from the ",(0,a.kt)("inlineCode",{parentName:"p"},"graphviz")," package which is installed\non most linux distros by default) or use an online editor like: ",(0,a.kt)("a",{parentName:"p",href:"https://dreampuf.github.io/GraphvizOnline"},"https://dreampuf.github.io/GraphvizOnline")," to\nview the graph."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cargo run -- test.js --flowgraph | dot -Tpng > test.png\n")),(0,a.kt)("p",null,"You can specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"-Tsvg")," to generate a ",(0,a.kt)("inlineCode",{parentName:"p"},"svg")," instead of a ",(0,a.kt)("inlineCode",{parentName:"p"},"png")," file."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Graphviz flowgraph",src:n(2593).Z,width:"3824",height:"263"})),(0,a.kt)("p",null,"Mermaid graphs can be displayed on github ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams"},"natively without third-party programs"),".\nBy using a ",(0,a.kt)("inlineCode",{parentName:"p"},"mermaid")," block as seen below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"```mermaid\n// graph contents here...\n```\n")),(0,a.kt)("p",null,'Additiona/ly you can specify the direction of "flow" by using the ',(0,a.kt)("inlineCode",{parentName:"p"},"--flowgraph-direction")," cli option,\nfor example ",(0,a.kt)("inlineCode",{parentName:"p"},"--flowgraph-direction=left-to-right"),", the default is ",(0,a.kt)("inlineCode",{parentName:"p"},"top-to-bottom"),"."))}u.isMDXComponent=!0},2593:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/graphviz_flowgraph-9dbcd905f4d53e3dce8e128b42ebaeb7.svg"}}]);